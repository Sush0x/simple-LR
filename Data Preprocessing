# -*- coding: utf-8 -*-
"""
Created on Fri Nov 17 09:48:48 2017

@author: Sushant Singh
"""

# Data Preprocessing

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

dataset = pd.read_csv("C:/Users/Sushant Singh/Desktop/Udemy_ML/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Data.csv")

#Independent Variable
X = dataset.iloc[:,:-1].values #Include all columns except last one. 
#Dependent Variable
Y = dataset.iloc[:,3].values # we can also use iloc[:,-1]

#-----------------------------------------------------------------------------------------------------------------


#Taking care of missing data
from sklearn.preprocessing import Imputer
imputer = Imputer(missing_values='NaN',strategy='mean',axis=0) # axis=0 for column
imputer = imputer.fit(X[:,1:3])
X[:,1:3] = imputer.transform(X[:,1:3])

#-----------------------------------------------------------------------------------------------------------------

#Encoding Categorical data -- Here we hace 3 categories France|Spain|Germany
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_X = LabelEncoder()
X[:,0]= labelencoder_X.fit_transform(X[:,0])

#Separate categories like a table
onehotencoder = OneHotEncoder(categorical_features = [0])  # [0] - for first column
X = onehotencoder.fit_transform(X).toarray()

labelencoder_Y = LabelEncoder()
Y= labelencoder_Y.fit_transform(Y)

#-----------------------------------------------------------------------------------------------------------------

#Splitting Dataset into Training set and Test Set
from sklearn.cross_validation import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=0) # means 20% will go as test data

#-----------------------------------------------------------------------------------------------------------------

#Feature Scaling
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.fit_transform(X_test)















